name: .NET CI/CD

on:
  push:
    branches:
      - main
    tags:
      - '*'
  release:
    types: [created]

jobs:
  build:
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/') == false

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build -c Release -p:DebugType=None -p:DebugSymbols=false

  publish:
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build -c Release -p:DebugType=None -p:DebugSymbols=false

      - name: Create release artifacts
        run: |
          mkdir artifacts
          mkdir artifacts\plugins\NativeVote\
          mkdir artifacts\shared\NativeVoteAPI\
          Copy-Item -Path "NativeVote\bin\Release\*\NativeVote.dll" -Destination "artifacts\plugins\NativeVote\NativeVote.dll" -Force
          Copy-Item -Path "NativeVoteAPI\bin\Release\*\NativeVoteAPI.dll" -Destination "artifacts\shared\NativeVoteAPI\NativeVoteAPI.dll" -Force

      - name: Compress artifacts
        run:
          Compress-Archive -Path artifacts/* -Destination NativeVoteAPI.zip

      - name: Upload release assets
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: NativeVoteAPI.zip

  release:
    runs-on: windows-latest
    needs: publish

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-artifacts
          path: artifacts/

      - name: check files
        run : |
          tree

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/NativeVoteAPI.zip
          asset_name: NativeVoteAPI.zip
          asset_content_type: application/zip
        
  
  publish-nuget:
    runs-on: windows-latest
    needs: release

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'
          
      - name: Install dependencies
        run: dotnet restore
        working-directory: NativeVoteAPI
        
      - name: Build
        run: dotnet build NativeVoteAPI\NativeVoteAPI.csproj --no-restore
        
      - name: Publish to NuGet
        uses: brandedoutcast/publish-nuget@v2
        with:
          PROJECT_FILE_PATH: NativeVoteAPI/NativeVoteAPI.csproj
          VERSION_REGEX: '^\s*<PackageVersion>(.*)<\/PackageVersion>\s*$'
          TAG_FORMAT: '*'
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}